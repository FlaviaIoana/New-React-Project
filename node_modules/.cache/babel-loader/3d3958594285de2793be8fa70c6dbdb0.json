{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpataruF\\\\first-react-project\\\\src\\\\components\\\\Game.js\";\nimport React, { useState } from 'react';\nimport { calculateWinner } from '../helpers';\nimport Board from './Board';\nconst styles = {\n  width: '200px',\n  margin: '20px auto'\n};\n\nconst Game = () => {\n  const [board, setBoard] = useState(Array(9).fill({\n    value: '',\n    winner: false\n  }));\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(board);\n\n  const handleClick = i => {\n    const boardCopy = [...board];\n    if (boardCopy[i].value || winner) return;\n    boardCopy[i] = xIsNext ? {\n      value: 'X',\n      winner: false\n    } : {\n      value: '0',\n      winner: false\n    };\n\n    if (winner) {\n      boardCopy.forEach(element => element.winner = true);\n    }\n\n    setBoard(boardCopy);\n    setXisNext(!xIsNext);\n  };\n\n  const renderMoves = () => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setBoard(Array(9).fill({\n      value: '',\n      winner: false\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Start game\");\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Board, {\n    squares: board,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), console.log(board), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, winner ? 'CONGRATULATIONS!!! Winner: ' + winner : 'Next player: ' + (xIsNext ? 'X' : 'O')), renderMoves(), \";\"));\n};\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/SpataruF/first-react-project/src/components/Game.js"],"names":["React","useState","calculateWinner","Board","styles","width","margin","Game","board","setBoard","Array","fill","value","winner","xIsNext","setXisNext","handleClick","i","boardCopy","forEach","element","renderMoves","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,eAAR,QAA8B,YAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,MAAM,GAAC;AACTC,EAAAA,KAAK,EAAE,OADE;AAETC,EAAAA,MAAM,EAAE;AAFC,CAAb;;AAKA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACS,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc;AAACC,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAAd,CAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMY,MAAM,GAAEX,eAAe,CAACM,KAAD,CAA7B;;AAGA,QAAMQ,WAAW,GAAGC,CAAC,IAAI;AACrB,UAAMC,SAAS,GAAE,CAAC,GAAGV,KAAJ,CAAjB;AACA,QAAIU,SAAS,CAACD,CAAD,CAAT,CAAaL,KAAb,IAAsBC,MAA1B,EAAkC;AAClCK,IAAAA,SAAS,CAACD,CAAD,CAAT,GAAcH,OAAO,GAAG;AAACF,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,MAAM,EAAE;AAArB,KAAH,GAAiC;AAACD,MAAAA,KAAK,EAAE,GAAR;AAAaC,MAAAA,MAAM,EAAE;AAArB,KAAtD;;AACA,QAAGA,MAAH,EAAW;AACPK,MAAAA,SAAS,CAACC,OAAV,CAAkBC,OAAO,IAAIA,OAAO,CAACP,MAAR,GAAiB,IAA9C;AACH;;AACDJ,IAAAA,QAAQ,CAACS,SAAD,CAAR;AACAH,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AAEH,GAVD;;AAaA,QAAMO,WAAW,GAAG,mBAChB;AAAQ,IAAA,OAAO,EAAE,MAAMZ,QAAQ,CAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,MAAM,EAAE;AAApB,KAAd,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;;AAGJ,sBACI,uDACA,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEL,KAAhB;AAAuB,IAAA,OAAO,EAAEQ,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAECM,OAAO,CAACC,GAAR,CAAYf,KAAZ,CAFD,eAGA;AAAK,IAAA,KAAK,EAAEJ,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIS,MAAM,GAAG,gCAA+BA,MAAlC,GAA2C,mBAAmBC,OAAO,GAAE,GAAF,GAAQ,GAAlC,CAArD,CADJ,EAEKO,WAAW,EAFhB,MAHA,CADJ;AAUC,CAhCD;;AAkCA,eAAed,IAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {calculateWinner} from '../helpers';\r\nimport Board from './Board';\r\n\r\nconst styles={\r\n    width: '200px',\r\n    margin: '20px auto'\r\n}\r\n\r\nconst Game = () => {\r\n    const [board, setBoard] = useState(Array(9).fill({value: '', winner: false}));\r\n    const [xIsNext, setXisNext] = useState(true);\r\n    const winner= calculateWinner(board);\r\n\r\n\r\n    const handleClick = i => {\r\n        const boardCopy= [...board];\r\n        if (boardCopy[i].value || winner) return;\r\n        boardCopy[i]= xIsNext ? {value: 'X', winner: false} : {value: '0', winner: false};\r\n        if(winner) {\r\n            boardCopy.forEach(element => element.winner = true);\r\n        }\r\n        setBoard(boardCopy);\r\n        setXisNext(!xIsNext);\r\n        \r\n    }\r\n\r\n\r\n    const renderMoves = () => (\r\n        <button onClick={() => setBoard(Array(9).fill({value: '', winner: false}))}>Start game</button>\r\n    )\r\nreturn (\r\n    <>\r\n    <Board squares={board} onClick={handleClick} />\r\n    {console.log(board)}\r\n    <div style={styles}>\r\n        <p>{winner ? 'CONGRATULATIONS!!! Winner: '+ winner : 'Next player: ' + (xIsNext? 'X' : 'O')}</p>\r\n        {renderMoves()};\r\n    </div>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}