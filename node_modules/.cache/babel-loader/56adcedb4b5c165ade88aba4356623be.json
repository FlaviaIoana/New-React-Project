{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\SpataruF\\\\first-react-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\SpataruF\\\\first-react-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{calculateWinner}from'../helpers';import Board from'./Board';var styles={width:'200px',margin:'20px auto'};var Game=function Game(){var _useState=useState(Array(9).fill({value:'',winner:false})),_useState2=_slicedToArray(_useState,2),board=_useState2[0],setBoard=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),xIsNext=_useState4[0],setXisNext=_useState4[1];var winner=calculateWinner(board);var handleClick=function handleClick(i){var boardCopy=_toConsumableArray(board);if(boardCopy[i].value||winner)return;boardCopy[i]=xIsNext?{value:'X',winner:'false'}:{value:'0',winner:'false'};winner=calculateWinner(board);if(winner){// boardCopy.forEach(element => element.winner = true);\nfor(var _i=0;_i<boardCopy.length;_i++){boardCopy[_i]={winner:'true'};}return;}setBoard(boardCopy);setXisNext(!xIsNext);};var renderMoves=function renderMoves(){return/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return setBoard(Array(9).fill({value:'',winner:false}));}},\"Start game\");};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Board,{squares:board,onClick:handleClick}),/*#__PURE__*/React.createElement(\"div\",{style:styles},/*#__PURE__*/React.createElement(\"p\",null,winner?'CONGRATULATIONS!!! Winner: '+winner:'Next player: '+(xIsNext?'X':'O')),renderMoves(),\";\"));};export default Game;","map":{"version":3,"sources":["C:/Users/SpataruF/first-react-project/src/components/Game.js"],"names":["React","useState","calculateWinner","Board","styles","width","margin","Game","Array","fill","value","winner","board","setBoard","xIsNext","setXisNext","handleClick","i","boardCopy","length","renderMoves"],"mappings":"gVAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,eAAR,KAA8B,YAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,GAAMC,CAAAA,MAAM,CAAC,CACTC,KAAK,CAAE,OADE,CAETC,MAAM,CAAE,WAFC,CAAb,CAKA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,eACWN,QAAQ,CAACO,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAACC,KAAK,CAAE,EAAR,CAAYC,MAAM,CAAE,KAApB,CAAd,CAAD,CADnB,wCACRC,KADQ,eACDC,QADC,8BAEeZ,QAAQ,CAAC,IAAD,CAFvB,yCAERa,OAFQ,eAECC,UAFD,eAGf,GAAIJ,CAAAA,MAAM,CAAET,eAAe,CAACU,KAAD,CAA3B,CAGA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,CAAC,CAAI,CACrB,GAAMC,CAAAA,SAAS,oBAAMN,KAAN,CAAf,CACA,GAAIM,SAAS,CAACD,CAAD,CAAT,CAAaP,KAAb,EAAsBC,MAA1B,CAAkC,OAClCO,SAAS,CAACD,CAAD,CAAT,CAAcH,OAAO,CAAG,CAACJ,KAAK,CAAE,GAAR,CAAaC,MAAM,CAAE,OAArB,CAAH,CAAmC,CAACD,KAAK,CAAE,GAAR,CAAaC,MAAM,CAAE,OAArB,CAAxD,CACAA,MAAM,CAAET,eAAe,CAACU,KAAD,CAAvB,CACA,GAAGD,MAAH,CAAW,CACP;AACA,IAAK,GAAIM,CAAAA,EAAC,CAAC,CAAX,CAAaA,EAAC,CAAEC,SAAS,CAACC,MAA1B,CAAkCF,EAAC,EAAnC,CAAsC,CAClCC,SAAS,CAACD,EAAD,CAAT,CAAa,CAACN,MAAM,CAAE,MAAT,CAAb,CACH,CACD,OACH,CACDE,QAAQ,CAACK,SAAD,CAAR,CACAH,UAAU,CAAC,CAACD,OAAF,CAAV,CAEH,CAfD,CAiBA,GAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,sBAChB,8BAAQ,OAAO,CAAE,yBAAMP,CAAAA,QAAQ,CAACL,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,CAACC,KAAK,CAAE,EAAR,CAAYC,MAAM,CAAE,KAApB,CAAd,CAAD,CAAd,EAAjB,eADgB,EAApB,CAGJ,mBACI,qDACA,oBAAC,KAAD,EAAO,OAAO,CAAEC,KAAhB,CAAuB,OAAO,CAAEI,WAAhC,EADA,cAEA,2BAAK,KAAK,CAAEZ,MAAZ,eACI,6BAAIO,MAAM,CAAG,8BAA+BA,MAAlC,CAA2C,iBAAmBG,OAAO,CAAE,GAAF,CAAQ,GAAlC,CAArD,CADJ,CAEKM,WAAW,EAFhB,KAFA,CADJ,CASC,CAnCD,CAqCA,cAAeb,CAAAA,IAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {calculateWinner} from '../helpers';\r\nimport Board from './Board';\r\n\r\nconst styles={\r\n    width: '200px',\r\n    margin: '20px auto'\r\n}\r\n\r\nconst Game = () => {\r\n    const [board, setBoard] = useState(Array(9).fill({value: '', winner: false}));\r\n    const [xIsNext, setXisNext] = useState(true);\r\n    let winner= calculateWinner(board);\r\n\r\n\r\n    const handleClick = i => {\r\n        const boardCopy= [...board];\r\n        if (boardCopy[i].value || winner) return;\r\n        boardCopy[i]= xIsNext ? {value: 'X', winner: 'false'} : {value: '0', winner: 'false'};\r\n        winner= calculateWinner(board)\r\n        if(winner) {\r\n            // boardCopy.forEach(element => element.winner = true);\r\n            for (let i=0;i< boardCopy.length; i++){\r\n                boardCopy[i]={winner: 'true'};\r\n            }\r\n            return;\r\n        }\r\n        setBoard(boardCopy);\r\n        setXisNext(!xIsNext);\r\n        \r\n    }\r\n\r\n    const renderMoves = () => (\r\n        <button onClick={() => setBoard(Array(9).fill({value: '', winner: false}))}>Start game</button>\r\n    )\r\nreturn (\r\n    <>\r\n    <Board squares={board} onClick={handleClick} />\r\n    <div style={styles}>\r\n        <p>{winner ? 'CONGRATULATIONS!!! Winner: '+ winner : 'Next player: ' + (xIsNext? 'X' : 'O')}</p>\r\n        {renderMoves()};\r\n    </div>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}