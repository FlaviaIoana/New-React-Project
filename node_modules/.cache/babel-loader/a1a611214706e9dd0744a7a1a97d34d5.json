{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpataruF\\\\first-react-project\\\\src\\\\components\\\\Game.js\";\nimport React, { useState } from 'react';\nimport { calculateWinner } from '../helpers';\nimport Board from './Board';\nconst styles = {\n  width: '200px',\n  margin: '20px auto'\n};\n\nconst Game = () => {\n  const [board, setBoard] = useState(Array(9).fill({\n    value: '',\n    winner: false\n  }));\n  const [xIsNext, setXisNext] = useState(true);\n  let winner = calculateWinner(board);\n\n  const handleClick = i => {\n    const boardCopy = [...board];\n    if (boardCopy[i].value) return;\n    boardCopy[i] = xIsNext ? {\n      value: 'X',\n      winner: false\n    } : {\n      value: '0',\n      winner: false\n    };\n    winner = calculateWinner(board);\n\n    if (winner) {\n      // boardCopy.forEach(element => element.winner = true);\n      for (let i = 0; i < boardCopy.length; i++) {\n        board[i] = {\n          winner: true\n        };\n      }\n\n      return;\n    }\n\n    setBoard(boardCopy);\n    setXisNext(!xIsNext);\n  };\n\n  const renderMoves = () => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setBoard(Array(9).fill({\n      value: '',\n      winner: false\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Start game\");\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Board, {\n    squares: board,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, winner ? 'CONGRATULATIONS!!! Winner: ' + winner : 'Next player: ' + (xIsNext ? 'X' : 'O')), renderMoves(), \";\"));\n};\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/SpataruF/first-react-project/src/components/Game.js"],"names":["React","useState","calculateWinner","Board","styles","width","margin","Game","board","setBoard","Array","fill","value","winner","xIsNext","setXisNext","handleClick","i","boardCopy","length","renderMoves"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE,OADI;AAEXC,EAAAA,MAAM,EAAE;AAFG,CAAf;;AAKA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACS,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAE;AAArB,GAAd,CAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAIY,MAAM,GAAGX,eAAe,CAACM,KAAD,CAA5B;;AAGA,QAAMQ,WAAW,GAAGC,CAAC,IAAI;AACrB,UAAMC,SAAS,GAAG,CAAC,GAAGV,KAAJ,CAAlB;AACA,QAAIU,SAAS,CAACD,CAAD,CAAT,CAAaL,KAAjB,EAAwB;AACxBM,IAAAA,SAAS,CAACD,CAAD,CAAT,GAAeH,OAAO,GAAG;AAAEF,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAAH,GAAmC;AAAED,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAAzD;AACAA,IAAAA,MAAM,GAAGX,eAAe,CAACM,KAAD,CAAxB;;AACA,QAAIK,MAAJ,EAAY;AACR;AACA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACvCT,QAAAA,KAAK,CAACS,CAAD,CAAL,GAAW;AAAEJ,UAAAA,MAAM,EAAE;AAAV,SAAX;AACH;;AACD;AACH;;AACDJ,IAAAA,QAAQ,CAACS,SAAD,CAAR;AACAH,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AAEH,GAfD;;AAiBA,QAAMM,WAAW,GAAG,mBAChB;AAAQ,IAAA,OAAO,EAAE,MAAMX,QAAQ,CAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,MAAM,EAAE;AAArB,KAAd,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;;AAGA,sBACI,uDACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEL,KAAhB;AAAuB,IAAA,OAAO,EAAEQ,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,KAAK,EAAEZ,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIS,MAAM,GAAG,gCAAgCA,MAAnC,GAA4C,mBAAmBC,OAAO,GAAG,GAAH,GAAS,GAAnC,CAAtD,CADJ,EAEKM,WAAW,EAFhB,MAFJ,CADJ;AASH,CAnCD;;AAqCA,eAAeb,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { calculateWinner } from '../helpers';\r\nimport Board from './Board';\r\n\r\nconst styles = {\r\n    width: '200px',\r\n    margin: '20px auto'\r\n}\r\n\r\nconst Game = () => {\r\n    const [board, setBoard] = useState(Array(9).fill({ value: '', winner: false }));\r\n    const [xIsNext, setXisNext] = useState(true);\r\n    let winner = calculateWinner(board);\r\n\r\n\r\n    const handleClick = i => {\r\n        const boardCopy = [...board];\r\n        if (boardCopy[i].value) return;\r\n        boardCopy[i] = xIsNext ? { value: 'X', winner: false } : { value: '0', winner: false };\r\n        winner = calculateWinner(board)\r\n        if (winner) {\r\n            // boardCopy.forEach(element => element.winner = true);\r\n            for (let i = 0; i < boardCopy.length; i++) {\r\n                board[i] = { winner: true };\r\n            }\r\n            return;\r\n        }\r\n        setBoard(boardCopy);\r\n        setXisNext(!xIsNext);\r\n\r\n    }\r\n\r\n    const renderMoves = () => (\r\n        <button onClick={() => setBoard(Array(9).fill({ value: '', winner: false }))}>Start game</button>\r\n    )\r\n    return (\r\n        <>\r\n            <Board squares={board} onClick={handleClick} />\r\n            <div style={styles}>\r\n                <p>{winner ? 'CONGRATULATIONS!!! Winner: ' + winner : 'Next player: ' + (xIsNext ? 'X' : 'O')}</p>\r\n                {renderMoves()};\r\n    </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}