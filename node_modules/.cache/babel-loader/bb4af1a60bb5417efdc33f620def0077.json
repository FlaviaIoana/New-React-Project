{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SpataruF\\\\first-react-project\\\\src\\\\components\\\\Game.js\";\nimport React, { useState } from 'react';\nimport { calculateWinner } from '../helpers';\nimport Board from './Board';\nconst styles = {\n  width: '200px',\n  margin: '20px auto'\n};\n\nconst Game = () => {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(board);\n\n  const handleClick = i => {\n    const boardCopy = [...board];\n    if (winner || boardCopy[i]) return;\n    boardCopy[i] = xIsNext ? 'X' : 'O';\n    setBoard(boardCopy);\n    setXisNext(!xIsNext);\n  };\n\n  const renderMoves = () => /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setBoard(Array(9).fill(null)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Start game\");\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Board, {\n    squares: board,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, winner ? 'CONGRATULATIONS!!! Winner: ' + winner : 'Next player: ' + (xIsNext ? 'X' : 'O')), renderMoves(), \";\"));\n};\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/SpataruF/first-react-project/src/components/Game.js"],"names":["React","useState","calculateWinner","Board","styles","width","margin","Game","board","setBoard","Array","fill","xIsNext","setXisNext","winner","handleClick","i","boardCopy","renderMoves"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,eAAR,QAA8B,YAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,MAAM,GAAC;AACTC,EAAAA,KAAK,EAAE,OADE;AAETC,EAAAA,MAAM,EAAE;AAFC,CAAb;;AAKA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACS,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMa,MAAM,GAAEZ,eAAe,CAACM,KAAD,CAA7B;;AAGA,QAAMO,WAAW,GAAGC,CAAC,IAAI;AACrB,UAAMC,SAAS,GAAE,CAAC,GAAGT,KAAJ,CAAjB;AACA,QAAIM,MAAM,IAAIG,SAAS,CAACD,CAAD,CAAvB,EAA4B;AAC5BC,IAAAA,SAAS,CAACD,CAAD,CAAT,GAAcJ,OAAO,GAAG,GAAH,GAAS,GAA9B;AACAH,IAAAA,QAAQ,CAACQ,SAAD,CAAR;AACAJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AAEH,GAPD;;AASA,QAAMM,WAAW,GAAG,mBAChB;AAAQ,IAAA,OAAO,EAAE,MAAMT,QAAQ,CAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;;AAGJ,sBACI,uDACA,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEH,KAAhB;AAAuB,IAAA,OAAO,EAAEO,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA;AAAK,IAAA,KAAK,EAAEX,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIU,MAAM,GAAG,gCAA+BA,MAAlC,GAA2C,mBAAmBF,OAAO,GAAE,GAAF,GAAQ,GAAlC,CAArD,CADJ,EAEKM,WAAW,EAFhB,MAFA,CADJ;AASC,CA3BD;;AA6BA,eAAeX,IAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {calculateWinner} from '../helpers';\r\nimport Board from './Board';\r\n\r\nconst styles={\r\n    width: '200px',\r\n    margin: '20px auto'\r\n}\r\n\r\nconst Game = () => {\r\n    const [board, setBoard] = useState(Array(9).fill(null));\r\n    const [xIsNext, setXisNext] = useState(true);\r\n    const winner= calculateWinner(board);\r\n\r\n\r\n    const handleClick = i => {\r\n        const boardCopy= [...board];\r\n        if (winner || boardCopy[i]) return;\r\n        boardCopy[i]= xIsNext ? 'X' : 'O';\r\n        setBoard(boardCopy);\r\n        setXisNext(!xIsNext);\r\n\r\n    }\r\n\r\n    const renderMoves = () => (\r\n        <button onClick={() => setBoard(Array(9).fill(null))}>Start game</button>\r\n    )\r\nreturn (\r\n    <>\r\n    <Board squares={board} onClick={handleClick} />\r\n    <div style={styles}>\r\n        <p>{winner ? 'CONGRATULATIONS!!! Winner: '+ winner : 'Next player: ' + (xIsNext? 'X' : 'O')}</p>\r\n        {renderMoves()};\r\n    </div>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}